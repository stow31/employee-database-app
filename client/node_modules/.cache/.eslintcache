[{"/Users/sophietownsend/Sophie/Development/employee_app/client/src/index.js":"1","/Users/sophietownsend/Sophie/Development/employee_app/client/src/App.js":"2","/Users/sophietownsend/Sophie/Development/employee_app/client/src/reportWebVitals.js":"3","/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeTable.js":"4","/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeContext.js":"5","/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js":"6","/Users/sophietownsend/Sophie/Development/employee_app/client/src/NewEmployeeForm.js":"7","/Users/sophietownsend/Sophie/Development/employee_app/client/src/Header.js":"8","/Users/sophietownsend/Sophie/Development/employee_app/client/src/EditEmployeeForm.js":"9","/Users/sophietownsend/Sophie/Development/employee_app/client/src/Traits.js":"10"},{"size":699,"mtime":1632991170950,"results":"11","hashOfConfig":"12"},{"size":1268,"mtime":1633751115048,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1632724024775,"results":"14","hashOfConfig":"12"},{"size":2764,"mtime":1636436834347,"results":"15","hashOfConfig":"12"},{"size":897,"mtime":1636452462566,"results":"16","hashOfConfig":"12"},{"size":2947,"mtime":1636436850097,"results":"17","hashOfConfig":"12"},{"size":3016,"mtime":1636512921940,"results":"18","hashOfConfig":"12"},{"size":162,"mtime":1632998276750,"results":"19","hashOfConfig":"12"},{"size":2417,"mtime":1633661373818,"results":"20","hashOfConfig":"12"},{"size":1425,"mtime":1636511509614,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a5p5ow",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sophietownsend/Sophie/Development/employee_app/client/src/index.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/App.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/reportWebVitals.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeTable.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeContext.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/NewEmployeeForm.js",["43"],"import { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { EmployeeContext } from './EmployeeContext.js'\nimport Traits from './Traits.js'\nimport './NewEmployeeForm.css';\nimport axios from 'axios';\n\nfunction NewEmployeeForm(){\n\n    const {\n        employeeList,\n        setEmployeeList,\n        userTraits\n      } = useContext(EmployeeContext);\n\n    const [user, setUser] = useState()\n    const [redirect, setRedirect] = useState(false)\n\n    // useEffect(() => {\n        \n    // }, [userTraits])\n    \n    const submit = e => {\n        e.preventDefault()\n        axios('/api/employee', {\n        method: 'POST',\n        data: JSON.stringify( user ),\n        headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => {\n                setEmployeeList([...employeeList, {...res.data.employee, checked: false}])\n                console.log(res.data.employee.id)\n                 \n                userTraits.forEach( traitId => {\n                    let traitObj = {trait_id: traitId, user_id: res.data.employee.id}\n                    \n                    axios('/api/employee_traits', {\n                        method: 'POST',\n                        data: JSON.stringify( traitObj ),\n                        headers: { 'Content-Type': 'application/json' },\n                        })\n                        . then( res => {\n                            setRedirect(true)\n                        })\n                })\n            })\n    }\n\n    if (redirect) {\n        return <Redirect to='/'/>;\n    }\n    \n    return (\n    <div className=\"new-employee-form-container\">\n        <form className=\"new-employee-form\" onSubmit={submit}>\n            <div className=\"form-grid-container\">\n                <div className=\"col-one-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        onChange={e => setUser({ ...user, first_name: e.target.value })}\n                    />\n                \n                    <input\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        onChange={e => setUser({ ...user, last_name: e.target.value })}\n                    />\n\n                    <input\n                        type=\"text\"\n                        placeholder=\"Email Address\"\n                        onChange={e => setUser({ ...user, email_address: e.target.value })}\n                    />\n\n                    <input\n                        type=\"text\"\n                        placeholder=\"Job\"\n                        onChange={e => setUser({ ...user, job: e.target.value })}\n                    />\n                </div>\n                <div className=\"col-two-container\">\n                    <Traits/>\n                </div>\n            </div>\n            \n            \n        \n            <button>Create</button>\n        </form>\n    </div>\n    \n        \n    )\n}\n\nexport default NewEmployeeForm\n\n\n\n\n","/Users/sophietownsend/Sophie/Development/employee_app/client/src/Header.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EditEmployeeForm.js",[],"/Users/sophietownsend/Sophie/Development/employee_app/client/src/Traits.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":1,"column":32,"nodeType":"47","messageId":"48","endLine":1,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":37,"column":33,"nodeType":"51","endLine":37,"endColumn":113},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]