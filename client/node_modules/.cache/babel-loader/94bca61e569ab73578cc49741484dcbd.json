{"ast":null,"code":"var _jsxFileName = \"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeManagement() {\n  _s();\n\n  const {\n    employeeList,\n    setEmployeeList,\n    selectedEmployees,\n    setSelectedEmployees,\n    editEmployee,\n    setEditEmployee\n  } = useContext(EmployeeContext);\n  const [dropDownOption, setDropDownOption] = useState('delete');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if ((selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) > 0) {\n      if (dropDownOption === 'delete') {\n        let selectedObj = {\n          selectedItems: selectedEmployees.map(obj => obj[\"id\"]).join(', ')\n        };\n        axios('/api', {\n          method: 'DELETE',\n          data: JSON.stringify(selectedObj),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          let arr = selectedObj[\"selectedItems\"].split(', ');\n          let subEmployeeList = [...employeeList];\n          arr.forEach(id => {\n            let index = subEmployeeList.findIndex(obj => obj.id === Number(id));\n            subEmployeeList = [...subEmployeeList.slice(0, index), ...subEmployeeList.slice(index + 1)];\n          });\n          setEmployeeList(subEmployeeList);\n        });\n      } else if (dropDownOption === 'edit') {\n        var _selectedEmployees$;\n\n        // divert the edit page \n        // have the edit page pre- filled with the information\n        let id = (_selectedEmployees$ = selectedEmployees[0]) === null || _selectedEmployees$ === void 0 ? void 0 : _selectedEmployees$.id;\n        let index = employeeList.findIndex(obj => obj.id === id);\n        setEditEmployee; // Redirect()\n      }\n    } else {\n      console.log('create error message - you must select an item to perform an action');\n    }\n  };\n\n  useEffect(() => {\n    let selectedArr = employeeList === null || employeeList === void 0 ? void 0 : employeeList.filter(obj => obj[\"checked\"]);\n    setSelectedEmployees(selectedArr);\n  }, [employeeList, setSelectedEmployees]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-management-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [(selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) > 0 ? selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length : \"0\", \" item selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setDropDownOption(e.target.value);\n        },\n        className: \"employee-updates-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), (selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) === 1 ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 50\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-btn\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new-employee\",\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EmployeeManagement, \"xHFToorsZHaUZDhPuAqx6Jk7Pzk=\");\n\n_c = EmployeeManagement;\nexport default EmployeeManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"sources":["/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js"],"names":["useContext","useEffect","useState","EmployeeContext","Link","axios","EmployeeManagement","employeeList","setEmployeeList","selectedEmployees","setSelectedEmployees","editEmployee","setEditEmployee","dropDownOption","setDropDownOption","handleSubmit","e","preventDefault","length","selectedObj","selectedItems","map","obj","join","method","data","JSON","stringify","headers","then","res","arr","split","subEmployeeList","forEach","id","index","findIndex","Number","slice","console","log","selectedArr","filter","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\nimport axios from 'axios';\n\nfunction EmployeeManagement() {\n  \n  const { \n    employeeList, setEmployeeList,\n    selectedEmployees, setSelectedEmployees,\n    editEmployee, setEditEmployee \n  } = useContext(EmployeeContext)\n\n  const [dropDownOption, setDropDownOption] = useState('delete')\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n\n    if (selectedEmployees?.length>0){\n\n      if (dropDownOption==='delete'){\n\n        let selectedObj = { \n          selectedItems: selectedEmployees\n                            .map(obj => obj[\"id\"])\n                            .join(', ')\n        }\n        \n        axios('/api', {\n          method: 'DELETE',\n          data: JSON.stringify( selectedObj ),\n          headers: { 'Content-Type': 'application/json' },\n        }).then( res => {\n          let arr = selectedObj[\"selectedItems\"].split(', ');\n          let subEmployeeList = [...employeeList]\n\n          arr.forEach( id => {\n            let index = subEmployeeList.findIndex(obj => obj.id === Number(id));\n            \n            subEmployeeList = [...subEmployeeList.slice(0, index), ...subEmployeeList.slice(index+1)];\n          } )\n\n          setEmployeeList(subEmployeeList)\n        })\n\n      } else if (dropDownOption==='edit'){\n\n        // divert the edit page \n        // have the edit page pre- filled with the information\n\n        let id = selectedEmployees[0]?.id\n        let index = employeeList.findIndex(obj => obj.id === id);\n        setEditEmployee\n        // Redirect()\n\n\n      }\n    } else {\n      console.log('create error message - you must select an item to perform an action')\n    }\n  }\n\n  useEffect(() =>{\n    let selectedArr = employeeList\n    ?.filter( obj => obj[\"checked\"] )\n    \n    setSelectedEmployees(selectedArr)\n  }, [employeeList, setSelectedEmployees])\n\n  return (\n      <div className=\"employee-management-div\">\n\n        <span>\n          {selectedEmployees?.length > 0 ? selectedEmployees?.length : \"0\"} item selected\n        </span>\n\n        <span>\n          <select \n            onChange={(e) => {setDropDownOption(e.target.value)}} className=\"employee-updates-dropdown\">\n              <option value=\"delete\">Delete</option>\n              {selectedEmployees?.length === 1 ? <option value=\"edit\">Edit</option>  : null}\n          </select>\n          <button onClick={handleSubmit} className=\"submit-btn\"> Submit </button>\n        </span>\n\n        <span>\n          <button>\n          <Link to=\"/new-employee\">Add New Employee</Link>\n          </button>\n        </span>\n\n      </div>\n  );\n}\n\nexport default EmployeeManagement;\n"]},"metadata":{},"sourceType":"module"}