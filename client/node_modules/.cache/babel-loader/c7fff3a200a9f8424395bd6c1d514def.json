{"ast":null,"code":"var _jsxFileName = \"/Users/sophietownsend/Sophie/Development/employee_app/client/src/NewEmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './NewEmployeeForm.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewEmployeeForm() {\n  _s();\n\n  const [user, setUser] = useState();\n\n  const submit = e => {\n    e.preventDefault();\n    fetch('/api', {\n      method: 'POST',\n      body: JSON.stringify({\n        user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(json => setUser(json.user));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // name=\"user[name]\"\n      // value={user.name}\n      ,\n      onChange: e => setUser({ ...user,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\" // name=\"user[email]\"\n      // value={user.email}\n      ,\n      onChange: e => setUser({ ...user,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewEmployeeForm, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = NewEmployeeForm;\nexport default NewEmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEmployeeForm\");","map":{"version":3,"sources":["/Users/sophietownsend/Sophie/Development/employee_app/client/src/NewEmployeeForm.js"],"names":["useState","axios","NewEmployeeForm","user","setUser","submit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","name","target","value","email"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,eAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;;AAEA,QAAMK,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,MAAD,EAAS;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,QAAAA;AAAF,OAAf,CAFQ;AAGdU,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHK,KAAT,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMME,IAAI,IAAIZ,OAAO,CAACY,IAAI,CAACb,IAAN,CANrB;AAOH,GATD;;AAWA,sBACI;AAAM,IAAA,QAAQ,EAAEE,MAAhB;AAAA,4BACA;AACI,MAAA,IAAI,EAAC,MADT,CAEI;AACA;AAHJ;AAII,MAAA,QAAQ,EAAEC,CAAC,IAAIF,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWc,QAAAA,IAAI,EAAEX,CAAC,CAACY,MAAF,CAASC;AAA1B,OAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AACI,MAAA,IAAI,EAAC,OADT,CAEI;AACA;AAHJ;AAII,MAAA,QAAQ,EAAEb,CAAC,IAAIF,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWiB,QAAAA,KAAK,EAAEd,CAAC,CAACY,MAAF,CAASC;AAA3B,OAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA,YATA,eAiBA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAnCQjB,e;;KAAAA,e;AAqCT,eAAeA,eAAf","sourcesContent":["import {useState} from 'react';\nimport './NewEmployeeForm.css';\nimport axios from 'axios';\n\nfunction NewEmployeeForm(){\n    const [user, setUser] = useState()\n    \n    const submit = e => {\n        e.preventDefault()\n        fetch('/api', {\n        method: 'POST',\n        body: JSON.stringify({ user }),\n        headers: { 'Content-Type': 'application/json' },\n        })\n        .then(res => res.json())\n        .then(json => setUser(json.user))\n    }\n    \n    return (\n        <form onSubmit={submit}>\n        <input\n            type=\"text\"\n            // name=\"user[name]\"\n            // value={user.name}\n            onChange={e => setUser({ ...user, name: e.target.value })}\n        />\n        {/* {user.errors.name && <p>{user.errors.name}</p>} */}\n    \n        <input\n            type=\"email\"\n            // name=\"user[email]\"\n            // value={user.email}\n            onChange={e => setUser({ ...user, email: e.target.value })}\n        />\n        {/* {user.errors.name && <p>{user.errors.name}</p>} */}\n    \n        <input type=\"submit\" name=\"Sign Up\" />\n        </form>\n    )\n}\n\nexport default NewEmployeeForm\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}