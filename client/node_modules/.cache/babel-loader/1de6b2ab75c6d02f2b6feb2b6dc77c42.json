{"ast":null,"code":"var _jsxFileName = \"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeManagement() {\n  _s();\n\n  const {\n    employeeList,\n    selectedEmployees,\n    setSelectedEmployees\n  } = useContext(EmployeeContext);\n  const [dropDownOption, setDropDownOption] = useState('delete');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (dropDownOption === 'delete') {\n      console.log('delete item from the list'); // call the delete api on whatever items are selected\n\n      console.log(selectedEmployees);\n    } else if (dropDownOption === 'edit') {\n      console.log('edit item from the list');\n    }\n  };\n\n  useEffect(() => {\n    let selectedArr = employeeList.filter(obj => obj[checked]);\n    setSelectedEmployees(selectedArr);\n  }, [employeeList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-management-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [(selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) > 0 ? selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length : \"0\", \" item selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setDropDownOption(e.target.value);\n        },\n        className: \"employee-updates-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), (selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) === 1 ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 50\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-btn\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new-employee\",\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EmployeeManagement, \"TLRFbJHtanVWzF1Ol67/cVKM3sI=\");\n\n_c = EmployeeManagement;\nexport default EmployeeManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"sources":["/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js"],"names":["useContext","useEffect","useState","EmployeeContext","Link","EmployeeManagement","employeeList","selectedEmployees","setSelectedEmployees","dropDownOption","setDropDownOption","handleSubmit","e","preventDefault","console","log","selectedArr","filter","obj","checked","length","target","value"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,0BAAP;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAE5B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA;AAAnC,MAA4DR,UAAU,CAACG,eAAD,CAA5E;AAEA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,QAAD,CAApD;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAM;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,cAAc,KAAG,QAArB,EAA8B;AAC5BK,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAD4B,CAG5B;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAZ;AACD,KALD,MAKO,IAAIE,cAAc,KAAG,MAArB,EAA4B;AACjCK,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,GAVD;;AAYAd,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIe,WAAW,GAAGV,YAAY,CAC7BW,MADiB,CACTC,GAAG,IAAIA,GAAG,CAACC,OAAD,CADD,CAAlB;AAGAX,IAAAA,oBAAoB,CAACQ,WAAD,CAApB;AACD,GALQ,EAKN,CAACV,YAAD,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BAEE;AAAA,iBACG,CAAAC,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEa,MAAnB,IAA4B,CAA5B,GAAgCb,iBAAhC,aAAgCA,iBAAhC,uBAAgCA,iBAAiB,CAAEa,MAAnD,GAA4D,GAD/D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AACE,QAAA,QAAQ,EAAGR,CAAD,IAAO;AAACF,UAAAA,iBAAiB,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV,CAAjB;AAAkC,SADtD;AACwD,QAAA,SAAS,EAAC,2BADlE;AAAA,gCAEI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGK,CAAAf,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEa,MAAnB,MAA8B,CAA9B,gBAAkC;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlC,GAAwE,IAH7E;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAET,YAAjB;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAeE;AAAA,6BACE;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBD;;GAjDQN,kB;;KAAAA,kB;AAmDT,eAAeA,kBAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\n\nfunction EmployeeManagement() {\n  \n  const { employeeList, selectedEmployees, setSelectedEmployees } = useContext(EmployeeContext)\n\n  const [dropDownOption, setDropDownOption] = useState('delete')\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    if (dropDownOption==='delete'){\n      console.log('delete item from the list');\n\n      // call the delete api on whatever items are selected\n      console.log(selectedEmployees)\n    } else if (dropDownOption==='edit'){\n      console.log('edit item from the list');\n    }\n  }\n\n  useEffect(() =>{\n    let selectedArr = employeeList\n    .filter( obj => obj[checked] )\n    \n    setSelectedEmployees(selectedArr)\n  }, [employeeList])\n\n  return (\n      <div className=\"employee-management-div\">\n\n        <span>\n          {selectedEmployees?.length > 0 ? selectedEmployees?.length : \"0\"} item selected\n        </span>\n\n        <span>\n          <select \n            onChange={(e) => {setDropDownOption(e.target.value)}} className=\"employee-updates-dropdown\">\n              <option value=\"delete\">Delete</option>\n              {selectedEmployees?.length === 1 ? <option value=\"edit\">Edit</option>  : null}\n          </select>\n          <button onClick={handleSubmit} className=\"submit-btn\"> Submit </button>\n        </span>\n\n        <span>\n          <button>\n          <Link to=\"/new-employee\">Add New Employee</Link>\n          </button>\n        </span>\n\n      </div>\n  );\n}\n\nexport default EmployeeManagement;\n"]},"metadata":{},"sourceType":"module"}