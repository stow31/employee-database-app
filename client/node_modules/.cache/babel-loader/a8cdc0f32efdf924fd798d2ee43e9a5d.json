{"ast":null,"code":"var _jsxFileName = \"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeTable.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport axios from 'axios';\nimport './EmployeeTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeTable() {\n  _s();\n\n  const {\n    employeeList,\n    setEmployeeList\n  } = useContext(EmployeeContext);\n  useEffect(() => {\n    axios.get(\"/api\").then(res => {\n      console.log(res); // setEmployeeList(\n      //   res.data.results.map(obj=> ({...obj, checked: false}))\n      // )\n    });\n  }, []);\n\n  const handleSelectEmployee = (idx, event) => {\n    if (event.target.checked) {\n      setEmployeeList([...employeeList.slice(0, idx), { ...employeeList[idx],\n        checked: true\n      }, ...employeeList.slice(idx + 1)]);\n    } else {\n      setEmployeeList([...employeeList.slice(0, idx), { ...employeeList[idx],\n        checked: false\n      }, ...employeeList.slice(idx + 1)]);\n    }\n  };\n\n  const handleSelectAllEmployees = event => {\n    if (event.target.checked) {\n      setEmployeeList(employeeList.map(obj => ({ ...obj,\n        checked: true\n      })));\n    } else {\n      setEmployeeList(employeeList.map(obj => ({ ...obj,\n        checked: false\n      })));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"employee-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => handleSelectAllEmployees(event),\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Customer ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: employeeList ? employeeList.map((obj, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: obj.checked ? 'checked ' : '',\n            onClick: event => handleSelectEmployee(idx, event),\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj.email_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj.job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: \"loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EmployeeTable, \"HjTNSIwaV1IHksDPlIZh4PvjP9Y=\");\n\n_c = EmployeeTable;\nexport default EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeTable.js"],"names":["useContext","useEffect","EmployeeContext","axios","EmployeeTable","employeeList","setEmployeeList","get","then","res","console","log","handleSelectEmployee","idx","event","target","checked","slice","handleSelectAllEmployees","map","obj","id","first_name","last_name","email_address","job"],"mappings":"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","sourcesContent":["import {useContext, useEffect} from 'react';\nimport {EmployeeContext} from './EmployeeContext.js'\nimport axios from 'axios';\nimport './EmployeeTable.css';\n\nfunction EmployeeTable() {\n\n\n    const {\n        employeeList, setEmployeeList\n    } = useContext(EmployeeContext);\n\n  useEffect(() => {\n    axios\n      .get(\"/api\")\n      .then((res) => {\n        console.log(res);\n        // setEmployeeList(\n        //   res.data.results.map(obj=> ({...obj, checked: false}))\n        // )\n      }\n        );\n  }, []);\n\n  const handleSelectEmployee = (idx, event) => {\n    if (event.target.checked){\n      setEmployeeList(\n        [...employeeList.slice(0,idx), {...employeeList[idx], checked: true}, ...employeeList.slice(idx+1)]\n      )\n    } else {\n      setEmployeeList(\n        [...employeeList.slice(0,idx), {...employeeList[idx], checked: false}, ...employeeList.slice(idx+1)]\n      )\n    }\n  }\n\n  const handleSelectAllEmployees = (event) => {\n    if (event.target.checked){\n      setEmployeeList(\n        employeeList.map(obj=> ({...obj, checked: true}))\n      )\n    } else {\n      setEmployeeList(\n        employeeList.map(obj=> ({...obj, checked: false}))\n      )\n    }\n  }\n  \n  return (\n      <table className=\"employee-table\">\n        <thead>\n            <tr>\n            <th> <input onChange={(event) => handleSelectAllEmployees(event)} type=\"checkbox\" /> </th>\n            <th>Customer ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email Address</th>\n            <th>Role</th>\n            </tr>\n        </thead>\n        <tbody>\n            {employeeList ?\n                employeeList.map( (obj, idx) => \n                <tr>\n                    <td>\n                      <input \n                        checked={obj.checked ? 'checked ': ''}\n                        onClick={(event) => handleSelectEmployee(idx, event)} \n                        type=\"checkbox\" />\n                      </td>\n                    <td>{obj.id}</td>\n                    <td>{obj.first_name}</td>\n                    <td>{obj.last_name}</td>\n                    <td>{obj.email_address}</td>\n                    <td>{obj.job}</td>\n                </tr>  \n                ) :\n                <tr>loading....</tr>\n            }\n        </tbody>\n      </table>\n  );\n}\n\nexport default EmployeeTable;\n"]},"metadata":{},"sourceType":"module"}