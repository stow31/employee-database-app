{"ast":null,"code":"var _jsxFileName = \"/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeManagement() {\n  _s();\n\n  const {\n    employeeList,\n    setEmployeeList,\n    selectedEmployees,\n    setSelectedEmployees\n  } = useContext(EmployeeContext);\n  const [dropDownOption, setDropDownOption] = useState('delete');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if ((selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) > 0) {\n      if (dropDownOption === 'delete') {\n        console.log(\"delete item\");\n        let selectedIDs = selectedEmployees.map(obj => obj[\"id\"]);\n        axios.delete(`/api/${selectedIDs}`).then(res => {\n          let idx = employeeList.findIndex(employee => employee.id === res.data.employee);\n          console.log(idx); // setEmployeeList([...employeeList.slice(0,idx), ...employeeList.slice(idx+1)])\n          //remove res from the employee list \n        }); //   axios('/api', {\n        //     method: 'DELETE',\n        //     data: JSON.stringify( selectedIDs ),\n        //     headers: { 'Content-Type': 'application/json' },\n        //   })\n        //   .then( deletedRes => {\n        //     axios\n        //       .get(\"/api\")\n        //       .then((res) => {\n        //         setEmployeeList(\n        //           res.data.map(obj=> ({...obj, checked: false}))\n        //         )\n        //       });\n        // })\n      } else if (dropDownOption === 'edit') {\n        console.log('edit item from the list');\n      }\n    } else {\n      console.log('create error message - you must select an item to perform an action');\n    }\n  };\n\n  useEffect(() => {\n    let selectedArr = employeeList === null || employeeList === void 0 ? void 0 : employeeList.filter(obj => obj[\"checked\"]);\n    setSelectedEmployees(selectedArr);\n  }, [employeeList, setSelectedEmployees]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-management-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [(selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) > 0 ? selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length : \"0\", \" item selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setDropDownOption(e.target.value);\n        },\n        className: \"employee-updates-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), (selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) === 1 ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 50\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-btn\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new-employee\",\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EmployeeManagement, \"SXgCnl0K4HyISb8mxtVf17N8fU0=\");\n\n_c = EmployeeManagement;\nexport default EmployeeManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"sources":["/Users/sophietownsend/Sophie/Development/employee_app/client/src/EmployeeManagement.js"],"names":["useContext","useEffect","useState","EmployeeContext","Link","axios","EmployeeManagement","employeeList","setEmployeeList","selectedEmployees","setSelectedEmployees","dropDownOption","setDropDownOption","handleSubmit","e","preventDefault","length","console","log","selectedIDs","map","obj","delete","then","res","idx","findIndex","employee","id","data","selectedArr","filter","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport { Link } from 'react-router-dom';\nimport './EmployeeManagement.css';\nimport axios from 'axios';\n\nfunction EmployeeManagement() {\n  \n  const { \n    employeeList, setEmployeeList,\n    selectedEmployees, setSelectedEmployees \n  } = useContext(EmployeeContext)\n\n  const [dropDownOption, setDropDownOption] = useState('delete')\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n\n    if (selectedEmployees?.length>0){\n\n      if (dropDownOption==='delete'){\n\n        console.log(\"delete item\");\n        let selectedIDs = selectedEmployees.map(obj => obj[\"id\"])\n\n        axios\n          .delete(`/api/${selectedIDs}`)\n          .then( res => {\n            let idx = employeeList.findIndex(employee => employee.id === res.data.employee);\n\n            console.log(idx)\n            // setEmployeeList([...employeeList.slice(0,idx), ...employeeList.slice(idx+1)])\n            //remove res from the employee list \n          })\n\n\n      //   axios('/api', {\n      //     method: 'DELETE',\n      //     data: JSON.stringify( selectedIDs ),\n      //     headers: { 'Content-Type': 'application/json' },\n      //   })\n      //   .then( deletedRes => {\n      //     axios\n      //       .get(\"/api\")\n      //       .then((res) => {\n      //         setEmployeeList(\n      //           res.data.map(obj=> ({...obj, checked: false}))\n      //         )\n      //       });\n      // })\n\n      } else if (dropDownOption==='edit'){\n\n        console.log('edit item from the list');\n\n      }\n    } else {\n      console.log('create error message - you must select an item to perform an action')\n    }\n  }\n\n  useEffect(() =>{\n    let selectedArr = employeeList\n    ?.filter( obj => obj[\"checked\"] )\n    \n    setSelectedEmployees(selectedArr)\n  }, [employeeList, setSelectedEmployees])\n\n  return (\n      <div className=\"employee-management-div\">\n\n        <span>\n          {selectedEmployees?.length > 0 ? selectedEmployees?.length : \"0\"} item selected\n        </span>\n\n        <span>\n          <select \n            onChange={(e) => {setDropDownOption(e.target.value)}} className=\"employee-updates-dropdown\">\n              <option value=\"delete\">Delete</option>\n              {selectedEmployees?.length === 1 ? <option value=\"edit\">Edit</option>  : null}\n          </select>\n          <button onClick={handleSubmit} className=\"submit-btn\"> Submit </button>\n        </span>\n\n        <span>\n          <button>\n          <Link to=\"/new-employee\">Add New Employee</Link>\n          </button>\n        </span>\n\n      </div>\n  );\n}\n\nexport default EmployeeManagement;\n"]},"metadata":{},"sourceType":"module"}